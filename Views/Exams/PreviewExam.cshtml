
@model ExamDetailsDTO

@{
    ViewData["Title"] = "معاينة الاختبار";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>معاينة الاختبار</h1>
        <div>
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary me-2">
                <i class="bi bi-arrow-left"></i> العودة
            </a>
        </div>
    </div>

    <div class="alert alert-info mb-4">
        <div class="row">
            <div class="col-md-6">
                <h5>معلومات الاختبار</h5>
                <p><strong>عنوان الاختبار:</strong> @Model.Name</p>
                <p><strong>الوظيفة:</strong> @ViewData["JobName"]</p>
                <p><strong>مستوى الصعوبة:</strong> @GetDifficultyName(Model.Difficulty)</p>
            </div>
            <div class="col-md-6">
                <div id="timer" class="text-center p-3 border rounded bg-light">
                    <h5>الوقت المتبقي</h5>
                    <div class="display-4" id="countdown">@Model.Duration:00</div>
                </div>
            </div>
        </div>
    </div>

    <form id="examForm" method="post" asp-action="SubmitExamPreview">
        <input type="hidden" name="examId" value="@Model.Id" />

        @if (Model.Questions != null && Model.Questions.Any())
        {
                        <div class="progress mb-4">
                            <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                        </div>
            
                        <div class="questions-container">
                            @for (int i = 0; i < Model.Questions.Count; i++)
                            {
                                            var question = Model.Questions.ElementAt(i);
                                            <div class="card mb-4 question-card" id="question-@i" data-question-index="@i" 
                                                 style="display: @(i == 0 ? "block" : "none");">
                                                <div class="card-header">
                                                    <span class="badge bg-primary">سؤال @(i + 1) / @Model.Questions.Count</span>
                                                    <span class="badge bg-secondary ms-2">@GetQuestionTypeName(question.QuestionType)</span>
                                                </div>
                                                <div class="card-body">
                                                    <h5 class="card-title mb-4">@question.QuestionText</h5>

                                                    @switch (question.QuestionType.ToUpper())
                                                    {
                                                                    case "MCQ":
                                                                                    <div class="options-container">
                                                                                        @foreach (var option in question.Options)
                                                                                        {
                                                                                                        <div class="form-check mb-3">
                                                                                                            <input class="form-check-input" type="radio" 
                                                                                                                   name="answers[@i]" value="@option.Id" id="option-@option.Id">
                                                                                                            <label class="form-check-label" for="option-@option.Id">
                                                                                                                @option.OptionText
                                                                                                            </label>
                                                                                                        </div>
                                                                                        }
                                                                                    </div>
                                                                                    break;

                                                                    case "TF":
                                                                                    <div class="options-container">
                                                                                        <div class="form-check mb-3">
                                                                                            <input class="form-check-input" type="radio" 
                                                                                                   name="answers[@i]" value="True" id="option-@i-true">
                                                                                            <label class="form-check-label" for="option-@i-true">
                                                                                                صحيح
                                                                                            </label>
                                                                                        </div>
                                                                                        <div class="form-check mb-3">
                                                                                            <input class="form-check-input" type="radio" 
                                                                                                   name="answers[@i]" value="False" id="option-@i-false">
                                                                                            <label class="form-check-label" for="option-@i-false">
                                                                                                خطأ
                                                                                            </label>
                                                                                        </div>
                                                                                    </div>
                                                                                    break;

                                                                    case "MULTISELECT":
                                                                                    <div class="options-container">
                                                                                        @foreach (var option in question.Options)
                                                                                        {
                                                                                                        <div class="form-check mb-3">
                                                                                                            <input class="form-check-input" type="checkbox" 
                                                                                                                   name="multiSelectAnswers[@i][]" value="@option.Id" id="option-@option.Id">
                                                                                                            <label class="form-check-label" for="option-@option.Id">
                                                                                                                @option.OptionText
                                                                                                            </label>
                                                                                                        </div>
                                                                                        }
                                                                                    </div>
                                                                                    break;

                                                                    case "OPEN":
                                                                    case "SHORTANSWER":
                                                                                    <div class="mb-3">
                                                                                        <textarea class="form-control" name="textAnswers[@i]" rows="4" 
                                                                                                  placeholder="اكتب إجابتك هنا"></textarea>
                                                                                    </div>
                                                                                    break;

                                                                    case "FILLINTHEBLANK":
                                                                                    <div class="mb-3">
                                                                                        <input type="text" class="form-control" name="textAnswers[@i]" 
                                                                                               placeholder="اكتب إجابتك هنا">
                                                                                    </div>
                                                                                    break;

                                                                    case "ORDERING":
                                                                                    <div class="ordering-container mb-3" id="ordering-@i">
                                                                                        <ul class="list-group ordering-list" data-question-index="@i">
                                                                                            @foreach (var option in question.Options.OrderBy(o => Guid.NewGuid()))
                                                                                            {
                                                                                                            <li class="list-group-item ordering-item" draggable="true" 
                                                                                                                data-option-id="@option.Id">
                                                                                                                <i class="bi bi-grip-vertical me-2"></i>
                                                                                                                @option.OptionText
                                                                                                                <input type="hidden" name="orderingAnswers[@i][]" value="@option.Id">
                                                                                                            </li>
                                                                                            }
                                                                                        </ul>
                                                                                    </div>
                                                                                    break;

                                                                    case "MATCHING":
                                                                                    <div class="matching-container mb-3">
                                                                                        <div class="row">
                                                                                            <div class="col-md-5">
                                                                                                <h6>العمود الأيسر</h6>
                                                                                                <ul class="list-group">
                                                                                                    @for (int j = 0; j < question.LeftColumn.Count; j++)
                                                                                                    {
                                                                                                                    <li class="list-group-item">
                                                                                                                        <span class="badge bg-primary me-2">@(j+1)</span>
                                                                                                                        @question.LeftColumn[j]
                                                                                                                    </li>
                                                                                                    }
                                                                                                </ul>
                                                                                            </div>
                                                                                            <div class="col-md-2 text-center d-flex align-items-center justify-content-center">
                                                                                                <i class="bi bi-arrow-left-right fs-1"></i>
                                                                                            </div>
                                                                                            <div class="col-md-5">
                                                                                                <h6>العمود الأيمن</h6>
                                                                                                <ul class="list-group matching-list" data-question-index="@i">
                                                                                                    @{
                                                                                                                    var randomizedRight = question.RightColumn
                                                                                                                                                    .Select((item, index) => new { Item = item, Index = index })
                                                                                                                                                    .OrderBy(x => Guid.NewGuid())
                                                                                                                                                    .ToList();
                                                                                                    }
                                                                                                    @for (int j = 0; j < randomizedRight.Count; j++)
                                                                                                    {
                                                                                                                    <li class="list-group-item">
                                                                                                                        <select class="form-select" name="matchingAnswers[@i][]">
                                                                                                                            <option value="">-- اختر الرقم المناسب --</option>
                                                                                                                            @for (int k = 0; k < question.LeftColumn.Count; k++)
                                                                                                                            {
                                                                                                                                            <option value="@k">@(k+1)</option>
                                                                                                                            }
                                                                                                                        </select>
                                                                                                                        <span class="ms-2">@randomizedRight[j].Item</span>
                                                                                                                        <input type="hidden" value="@randomizedRight[j].Index">
                                                                                                                    </li>
                                                                                                    }
                                                                                                </ul>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                    break;
                                                    }
                                                </div>
                                                <div class="card-footer d-flex justify-content-between">
                                                    @if (i > 0)
                                                    {
                                                                    <button type="button" class="btn btn-secondary prev-question" data-target="@(i-1)">
                                                                        <i class="bi bi-arrow-left"></i> السابق
                                                                    </button>
                                                    }
                                                    else
                                                    {
                                                                    <div></div>
                                                    }
                            
                                                    @if (i < Model.Questions.Count - 1)
                                                    {
                                                                    <button type="button" class="btn btn-primary next-question" data-target="@(i+1)">
                                                                        التالي <i class="bi bi-arrow-right"></i>
                                                                    </button>
                                                    }
                                                    else
                                                    {
                                                                    <button type="button" class="btn btn-success" id="submitExam">
                                                                        تقديم الاختبار <i class="bi bi-check2-circle"></i>
                                                                    </button>
                                                    }
                                                </div>
                                            </div>
                            }
                        </div>
            
                        <div class="fixed-bottom bg-light p-3 shadow-lg d-flex justify-content-center">
                            <div class="questions-nav">
                                @for (int i = 0; i < Model.Questions.Count; i++)
                                {
                                                <button type="button" class="btn btn-outline-primary question-nav-btn m-1" data-target="@i">
                                                    @(i + 1)
                                                </button>
                                }
                            </div>
                        </div>
        }
        else
        {
                        <div class="alert alert-warning">
                            <h4>لا توجد أسئلة</h4>
                            <p>لم يتم إضافة أي أسئلة لهذا الاختبار بعد.</p>
                        </div>
        }
        
        <!-- Submit Modal -->
        <div class="modal fade" id="submitModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">تأكيد التقديم</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>هل أنت متأكد من تقديم الاختبار؟</p>
                        <div id="unanswered-warning" class="alert alert-warning" style="display: none;">
                            <p>لديك أسئلة لم تتم الإجابة عليها.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            إلغاء
                        </button>
                        <button type="submit" class="btn btn-primary" id="confirmSubmit">
                            تأكيد التقديم
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
                <script>
                    $(document).ready(function() {
                        // Navigation between questions
                        $('.next-question, .prev-question, .question-nav-btn').on('click', function() {
                            const targetIndex = $(this).data('target');
                            $('.question-card').hide();
                            $(`#question-${targetIndex}`).show();
                            updateProgress();
                        });
            
                        // Update progress bar
                        function updateProgress() {
                            const total = $('.question-card').length;
                            const answered = $('input[type="radio"]:checked, input[type="checkbox"]:checked, textarea:filled, input[type="text"]:filled').length;
                            const percent = Math.round((answered / total) * 100);
                            $('.progress-bar').css('width', percent + '%').attr('aria-valuenow', percent).text(percent + '%');
                        }
            
                        // Handle ordering items with drag and drop
                        $('.ordering-item').on('dragstart', function(e) {
                            e.originalEvent.dataTransfer.setData('text/plain', $(this).index());
                            $(this).addClass('dragging');
                        });
            
                        $('.ordering-item').on('dragover', function(e) {
                            e.preventDefault();
                        });
            
                        $('.ordering-item').on('drop', function(e) {
                            e.preventDefault();
                            const sourceIndex = e.originalEvent.dataTransfer.getData('text/plain');
                            const targetIndex = $(this).index();
                            const list = $(this).parent();
                            const items = list.children();
                
                            if (sourceIndex < targetIndex) {
                                $(items[sourceIndex]).insertAfter(items[targetIndex]);
                            } else {
                                $(items[sourceIndex]).insertBefore(items[targetIndex]);
                            }
                
                            // Update hidden inputs order
                            updateOrderingInputs(list.data('question-index'));
                        });
            
                        $('.ordering-item').on('dragend', function() {
                            $(this).removeClass('dragging');
                        });
            
                        function updateOrderingInputs(questionIndex) {
                            const list = $(`ul[data-question-index="${questionIndex}"]`);
                            const items = list.children();
                
                            items.each(function(index) {
                                const optionId = $(this).data('option-id');
                                $(this).find('input[type="hidden"]').val(optionId);
                            });
                        }
            
                        // Countdown timer
                        let duration = parseInt('@Model.Duration');
                        let minutes = duration;
                        let seconds = 0;
            
                        const timer = setInterval(function() {
                            if (seconds === 0) {
                                if (minutes === 0) {
                                    clearInterval(timer);
                                    alert('انتهى وقت الاختبار! - Exam time is up!');
                                    $('#examForm').submit();
                                    return;
                                }
                                minutes--;
                                seconds = 59;
                            } else {
                                seconds--;
                            }
                
                            $('#countdown').text(`${minutes}:${seconds < 10 ? '0' + seconds : seconds}`);
                
                            // Warning when 5 minutes left
                            if (minutes === 5 && seconds === 0) {
                                alert('تبقى 5 دقائق فقط!');
                            }
                        }, 1000);
            
                        // Submit exam handling
                        $('#submitExam').on('click', function() {
                            const total = $('.question-card').length;
                            const answered = $('input[type="radio"]:checked, input[type="checkbox"]:checked, textarea:filled, input[type="text"]:filled').length;
                
                            if (answered < total) {
                                $('#unanswered-warning').show();
                            } else {
                                $('#unanswered-warning').hide();
                            }
                
                            $('#submitModal').modal('show');
                        });
                    });
                </script>
}

@functions {
    private string GetQuestionTypeName(string type)
    {
        return type switch
        {
            "MCQ" => "اختيار من متعدد",
            "TF" => "صح / خطأ",
            "open" => "إجابة مفتوحة",
            "fillInTheBlank" => "ملء الفراغات",
            "ordering" => "ترتيب",
            "matching" => "مطابقة",
            "multiSelect" => "اختيار متعدد",
            "shortAnswer" => "إجابة قصيرة",
            _ => type
        };
    }

    private string GetDifficultyName(string difficulty)
    {
        return difficulty switch
        {
            "easy" => "سهل",
            "medium" => "متوسط",
            "hard" => "صعب",
            _ => difficulty
        };
    }
}
