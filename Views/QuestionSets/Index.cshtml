@model IEnumerable<TawtheefTest.DTOs.QuestionSetDto>
@{
  ViewData["title"] = "مجموعات الأسئلة";
}

<div class="container-xxl flex-grow-1 container-p-y">
  <h4 class="fw-bold py-3 mb-4">
    <span class="text-muted fw-light">إدارة الأسئلة /</span> مجموعات الأسئلة
  </h4>

  <div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
      <h5 class="mb-0">مجموعات الأسئلة</h5>
      <a href="@Url.Action("Create")" class="btn btn-primary">
        <i class="bx bx-plus me-1"></i>
        إنشاء مجموعة أسئلة جديدة
      </a>
    </div>

    <div class="card-body">
      @if (TempData["SuccessMessage"] != null)
      {
        <div class="alert alert-success alert-dismissible mb-3" role="alert">
          @TempData["SuccessMessage"]
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      }

      @if (TempData["ErrorMessage"] != null)
      {
        <div class="alert alert-danger alert-dismissible mb-3" role="alert">
          @TempData["ErrorMessage"]
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      }

      @if (!Model.Any())
      {
        <div class="alert alert-info text-center">
          <i class="bx bx-info-circle fs-1 mb-2"></i>
          <p>لا توجد مجموعات أسئلة حالياً.</p>
        </div>
      }
      else
      {
        <div class="table-responsive">
          <table class="table table-bordered table-hover">
            <thead>
              <tr>
                <th>الاسم</th>
                <th>نوع الأسئلة</th>
                <th>عدد الأسئلة</th>
                <th>الحالة</th>
                <th>تاريخ الإنشاء</th>
                <th>العمليات</th>
              </tr>
            </thead>
            <tbody>
              @foreach (var item in Model)
              {
                <tr>
                  <td>
                    <strong>@item.Name</strong>
                    <small class="d-block text-muted">@item.Description</small>
                  </td>
                  <td>
                    @GetQuestionTypeDisplay(item.QuestionType)
                  </td>
                  <td>
                    @if (item.Status == TawtheefTest.Enum.QuestionSetStatus.Completed)
                    {
                      <span>@item.QuestionsGenerated / @item.QuestionCount</span>
                    }
                    else
                    {
                      <span>@item.QuestionCount</span>
                    }
                  </td>
                  <td>
                    <span class="badge rounded-pill bg-@GetStatusBadge(item.Status)">@item.StatusDescription</span>
                  </td>
                  <td>@item.CreatedAt.ToString("yyyy/MM/dd HH:mm")</td>
                  <td>
                    <div class="dropdown">
                      <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                        <i class="bx bx-dots-vertical-rounded"></i>
                      </button>
                      <div class="dropdown-menu">
                        <a class="dropdown-item" href="@Url.Action("Details", new { id = item.Id })">
                          <i class="bx bx-show-alt me-1"></i> عرض
                        </a>
                        @if (item.Status != TawtheefTest.Enum.QuestionSetStatus.Processing)
                        {
                          <a class="dropdown-item" href="@Url.Action("Edit", new { id = item.Id })">
                            <i class="bx bx-edit-alt me-1"></i> تعديل
                          </a>
                          <a class="dropdown-item text-danger" href="@Url.Action("Delete", new { id = item.Id })">
                            <i class="bx bx-trash me-1"></i> حذف
                          </a>
                        }
                        @if (item.Status == TawtheefTest.Enum.QuestionSetStatus.Failed)
                        {
                          <form asp-action="Retry" method="post"
                            onsubmit="return confirm('هل أنت متأكد من إعادة المحاولة؟');">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="dropdown-item">
                              <i class="bx bx-refresh me-1"></i> إعادة المحاولة
                            </button>
                          </form>
                        }
                      </div>
                    </div>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      }
    </div>
  </div>
</div>

@functions {
  string GetQuestionTypeDisplay(string questionType)
  {
    return questionType?.ToLower() switch
    {
      "mcq" => "اختيار من متعدد",
      "tf" => "صح / خطأ",
      "open" => "إجابة مفتوحة",
      "fillintheblank" => "ملء الفراغات",
      "ordering" => "ترتيب",
      "matching" => "مطابقة",
      "multiselect" => "اختيار متعدد",
      "shortanswer" => "إجابة قصيرة",
      _ => questionType
    };
  }

  string GetStatusBadge(TawtheefTest.Enum.QuestionSetStatus status)
  {
    return status switch
    {
      TawtheefTest.Enum.QuestionSetStatus.Pending => "warning",
      TawtheefTest.Enum.QuestionSetStatus.Processing => "info",
      TawtheefTest.Enum.QuestionSetStatus.Completed => "success",
      TawtheefTest.Enum.QuestionSetStatus.Failed => "danger",
      _ => "secondary"
    };
  }
}
