@using TawtheefTest.Enums
@model TawtheefTest.DTOs.QuestionSetDto

@{
    ViewData["Title"] = "تفاصيل مجموعة الأسئلة";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>تفاصيل مجموعة الأسئلة</h1>
        <div>
            @if (Model.Status != QuestionSetStatus.Processing)
            {
                <div class="btn-group me-2">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bx bx-gear"></i> الإجراءات
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#regenerateWarningModal">
                                <i class="bx bx-arrow-clockwise"></i> إعادة توليد الأسئلة
                            </a></li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#shuffleOptionsModal">
                                <i class="bx bx-shuffle"></i> خلط الأسئلة/الخيارات
                            </a></li>
                        <!-- عناصر أخرى في القائمة -->
                    </ul>
                </div>
            }
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bx bx-arrow-right"></i> العودة للقائمة
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="إغلاق"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="إغلاق"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">معلومات المجموعة</h5>
                </div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">الاسم:</dt>
                        <dd class="col-sm-8">@Model.Name</dd>

                        <dt class="col-sm-4">الوصف:</dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Description) ? "لا يوجد" : Model.Description)</dd>

                        <dt class="col-sm-4">نوع الأسئلة:</dt>
                        <dd class="col-sm-8">
                            @(Model.QuestionType switch {
                                "MCQ" => "اختيار من متعدد",
                                "TF" => "صح / خطأ",
                                "open" => "إجابة مفتوحة",
                                "fillInTheBlank" => "ملء الفراغات",
                                "ordering" => "ترتيب",
                                "matching" => "مطابقة",
                                "multiSelect" => "اختيار متعدد",
                                "shortAnswer" => "إجابة قصيرة",
                                _ => Model.QuestionType
                            })
                        </dd>

                        <dt class="col-sm-4">اللغة:</dt>
                        <dd class="col-sm-8">@(Model.Language == QuestionSetLanguage.Arabic ? "العربية" : "الإنجليزية")</dd>

                        <dt class="col-sm-4">الصعوبة:</dt>
                        <dd class="col-sm-8">
                            @(Model.Difficulty switch {
                                "easy" => "سهل",
                                "medium" => "متوسط",
                                "hard" => "صعب",
                                "auto" => "تلقائي",
                                _ => Model.Difficulty
                            })
                        </dd>

                        <dt class="col-sm-4">الحالة:</dt>
                        <dd class="col-sm-8">
                            <span class="badge @Model.StatusClass">
                                <i class="bx bx-@Model.StatusIcon"></i>
                                @(Model.Status switch {
                                    QuestionSetStatus.Pending => "قيد الانتظار",
                                    QuestionSetStatus.Processing => "قيد المعالجة",
                                    QuestionSetStatus.Completed => "مكتملة",
                                    QuestionSetStatus.Failed => "فشل",
                                    _ => "غير معروفة"
                                })
                            </span>
                        </dd>

                        <dt class="col-sm-4">تاريخ الإنشاء:</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>

                        @if (Model.ProcessedAt.HasValue)
                        {
                            <dt class="col-sm-4">تاريخ المعالجة:</dt>
                            <dd class="col-sm-8">@Model.ProcessedAt.Value.ToString("yyyy-MM-dd HH:mm")</dd>
                        }
                    </dl>
                </div>
            </div>

            <div class="card shadow-sm mt-4">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">الإجراءات</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">

                        @if (Model.Status == QuestionSetStatus.Completed)
                        {
                            <a href="@Url.Action("AddToExam", new { id = Model.Id })" class="btn btn-outline-success">
                                <i class="bx bx-link"></i> إضافة إلى اختبار
                            </a>
                            <a href="@Url.Action("Clone", "QuestionSets", new { id = Model.Id })" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="إنشاء نسخة من هذه المجموعة">
                                <i class="bx bx-files"></i> نسخ المجموعة
                            </a>
                            <button type="button" class="btn btn-outline-warning" data-bs-toggle="modal" data-bs-target="#regenerateModal">
                                <i class="bx bx-arrow-repeat"></i> إعادة توليد الأسئلة
                            </button>
                        }
                        else if (Model.Status == QuestionSetStatus.Failed)
                        {
                            <form asp-action="Retry" asp-route-id="@Model.Id" method="post">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bx bx-arrow-repeat"></i> إعادة المحاولة
                                </button>
                            </form>
                        }
                        else if (Model.Status == QuestionSetStatus.Processing)
                        {
                            <button type="button" class="btn btn-secondary" disabled>
                                <i class="bx bx-hourglass-split"></i> قيد المعالجة...
                            </button>
                        }
                        else if (Model.Status == QuestionSetStatus.Pending)
                        {
                            <button type="button" class="btn btn-secondary mt-2" disabled>
                                <i class="bx bx-hourglass-split"></i> قيد الانتظار...
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            @if (Model.Status == QuestionSetStatus.Processing)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-body text-center p-5">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">جاري التحميل...</span>
                        </div>
                        <h5>جاري توليد الأسئلة...</h5>
                        <p class="text-muted">يرجى الانتظار، قد تستغرق هذه العملية بضع دقائق.</p>
                        <div class="mt-3">
                            <div class="progress" style="height: 10px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" style="width: 100%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (Model.Status == QuestionSetStatus.Failed)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-body text-center p-5">
                        <i class="bx bx-exclamation-triangle-fill text-danger fs-1 mb-3"></i>
                        <h5>فشل في توليد الأسئلة</h5>
                        <p class="text-muted">@(string.IsNullOrEmpty(Model.ErrorMessage) ? "حدث خطأ أثناء توليد الأسئلة. يرجى المحاولة مرة أخرى." : Model.ErrorMessage)</p>
                        <form asp-action="Retry" asp-route-id="@Model.Id" method="post" class="mt-3">
                            <button type="submit" class="btn btn-primary">
                                <i class="bx bx-arrow-repeat"></i> إعادة المحاولة
                            </button>
                        </form>
                    </div>
                </div>
            }
            else if (Model.Status == QuestionSetStatus.Completed && Model.Questions != null && Model.Questions.Any())
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">الأسئلة (@Model.QuestionsGenerated / @Model.QuestionCount)</h5>
                        <div>
                            <button type="button" class="btn btn-sm btn-outline-success me-2" id="showAllAnswers">
                                <i class="bx bx-show"></i> عرض جميع الإجابات
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-warning me-2" id="hideAllAnswers" style="display:none;">
                                <i class="bx bx-hide"></i> إخفاء جميع الإجابات
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-info me-2" data-bs-toggle="modal" data-bs-target="#answersSummaryModal">
                                <i class="bx bx-list-check"></i> ملخص الإجابات
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#shuffleOptionsModal">
                                <i class="bx bx-shuffle"></i> خلط الخيارات
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="accordion" id="questionsAccordion">
                            @foreach (var question in Model.Questions)
                            {
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="heading@(question.Index + 1)">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(question.Id)" aria-expanded="false" aria-controls="collapse@(question.Id)">
                                            <span class="fw-bold me-2">@question.Index.</span> @Html.Raw(question.QuestionText ?? question.InstructionText)
                                        </button>
                                    </h2>
                                    <div id="collapse@(question.Id)" class="accordion-collapse collapse" aria-labelledby="heading@(question.Id)" data-bs-parent="#questionsAccordion">
                                        <div class="accordion-body">
                                            @if (question.QuestionType == "MCQ" || question.QuestionType == "multiSelect")
                                            {
                                                <h6 class="mb-3">الخيارات:</h6>
                                                <div class="list-group">
                                                    @foreach (var option in question.Options)
                                                    {
                                                        <div class="list-group-item @(option.IsCorrect ? "list-group-item-success" : "")">
                                                            @if (option.IsCorrect)
                                                            {
                                                                <i class="bx bx-check-circle-fill text-success me-2"></i>
                                                            }
                                                            @option.Text
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (question.QuestionType == "TF")
                                            {
                                                <h6 class="mb-3">الإجابة الصحيحة:</h6>
                                                <div class="alert @(question.TrueFalseAnswer == true ? "alert-success" : "alert-danger")">
                                                    @(question.TrueFalseAnswer == true ? "صحيح" : "خطأ")
                                                </div>
                                            }
                                            else if (question.QuestionType == "open" || question.QuestionType == "shortAnswer")
                                            {
                                                <h6 class="mb-3">الإجابة النموذجية:</h6>
                                                <div class="alert alert-info">
                                                    @Html.Raw(question.Answer)
                                                </div>
                                            }
                                            else if (question.QuestionType == "fillInTheBlank")
                                            {
                                                <h6 class="mb-3">الكلمات المفقودة:</h6>
                                                <div class="alert alert-info">
                                                    @Html.Raw(question.Answer)
                                                </div>

                                                @* عرض الخيارات إذا كانت موجودة لأسئلة ملء الفراغات *@
                                                @if (question.Options != null && question.Options.Any())
                                                {
                                                    <h6 class="mb-3">الخيارات المتاحة:</h6>
                                                    <div class="list-group">
                                                        @foreach (var option in question.Options)
                                                        {
                                                            <div class="list-group-item @(option.IsCorrect ? "list-group-item-success" : "")">
                                                                @if (option.IsCorrect)
                                                                {
                                                                    <i class="bx bx-check-circle-fill text-success me-2"></i>
                                                                }
                                                                @option.Text
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            }
                                            else if (question.QuestionType == "matching")
                                            {
                                                <h6 class="mb-3">أزواج المطابقة:</h6>
                                                <div class="list-group">
                                                    @foreach (var pair in question.MatchingPairs)
                                                    {
                                                        <div class="list-group-item">
                                                            <div class="row">
                                                                <div class="col-5 border-end">@pair.LeftSide</div>
                                                                <div class="col-2 text-center"><i class="bx bx-arrow-right"></i></div>
                                                                <div class="col-5">@pair.RightSide</div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else if (question.QuestionType == "ordering")
                                            {
                                                @if (!string.IsNullOrEmpty(question.InstructionText))
                                                {
                                                    <div class="mt-3">
                                                        <h6>تعليمات:</h6>
                                                        <p class="text-muted">@Html.Raw(question.InstructionText)</p>
                                                    </div>
                                                }
                                                <div class="row">
                                                    <div class="col-6 mb-3">
                                                        <h6 class="mb-3">الترتيب الصحيح:</h6>
                                                        <div class="list-group">
                                                            @foreach (var item in question.OrderingItems.Where(ss => ss.DisplayOrder == 0).OrderBy(i => i.CorrectOrder))
                                                            {
                                                                <div class="list-group-item">
                                                                    <span class="badge bg-primary me-2">@item.CorrectOrder</span>
                                                                    @item.Text
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="col-6 mb-3">
                                                        <h6 class="mb-3">ترتيب العرض للمتقدمين:</h6>
                                                        <div class="list-group">
                                                            @foreach (var item in question.OrderingItems.Where(ss=>ss.CorrectOrder == 0).OrderBy(i => i.CorrectOrder))
                                                            {
                                                                <div class="list-group-item">
                                                                    <span class="badge bg-primary me-2">@item.DisplayOrder</span>
                                                                    @item.Text
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }


                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-body text-center p-5">
                        <i class="bx bx-hourglass text-warning fs-1 mb-3"></i>
                        <h5>في انتظار توليد الأسئلة</h5>
                        <p class="text-muted">سيتم توليد الأسئلة قريبًا. يمكنك تحديث الصفحة للتحقق من الحالة.</p>
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.ContentSourceType))
            {
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">مصدر المحتوى</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row mb-0">
                            <dt class="col-sm-3">نوع المصدر:</dt>
                            <dd class="col-sm-9">
                                @(Model.ContentSourceType.ToLower() switch {
                                    "text" => "نص",
                                    "topic" => "موضوع",
                                    "link" => "رابط",
                                    "youtube" => "يوتيوب",
                                    "document" => "مستند",
                                    "image" => "صورة",
                                    "audio" => "صوت",
                                    "video" => "فيديو",
                                    _ => Model.ContentSourceType
                                })
                            </dd>

                            @if (!string.IsNullOrEmpty(Model.Content))
                            {
                                <dt class="col-sm-3">المحتوى:</dt>
                                <dd class="col-sm-9">
                                    @if (Model.ContentSourceType.ToLower() == "text" && Model.Content.Length > 300)
                                    {
                                        <div class="text-content-preview">
                                            @Model.Content.Substring(0, 300)...
                                            <button class="btn btn-link btn-sm text-content-toggle">عرض المزيد</button>
                                        </div>
                                        <div class="text-content-full" style="display:none;">
                                            @Model.Content
                                            <button class="btn btn-link btn-sm text-content-toggle">عرض أقل</button>
                                        </div>
                                    }
                                    else
                                    {
                                        @Model.Content
                                    }
                                </dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.Url))
                            {
                                <dt class="col-sm-3">الرابط:</dt>
                                <dd class="col-sm-9">
                                    <a href="@Model.Url" target="_blank">@Model.Url</a>
                                </dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.FileName))
                            {
                                <dt class="col-sm-3">الملف:</dt>
                                <dd class="col-sm-9">
                                    @Model.FileName
                                    @if (!string.IsNullOrEmpty(Model.FileName))
                                    {
                                        <a href="@Url.Action("DownloadFile", new { id = Model.Id })" class="btn btn-sm btn-outline-primary ms-2">
                                            <i class="bx bx-download"></i> تنزيل
                                        </a>
                                    }
                                </dd>
                            }
                        </dl>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal: إعادة توليد الأسئلة -->
<div class="modal fade" id="regenerateModal" tabindex="-1" aria-labelledby="regenerateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="regenerateModalLabel">إعادة توليد الأسئلة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body">
                <p>هل أنت متأكد من رغبتك في إعادة توليد الأسئلة؟ سيتم حذف الأسئلة الحالية واستبدالها بأسئلة جديدة.</p>
                <div class="alert alert-warning">
                    <i class="bx bx-exclamation-triangle-fill"></i> تحذير: لا يمكن التراجع عن هذه العملية.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <form asp-action="GenerateAgain" asp-route-id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-warning">إعادة التوليد</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal: خلط خيارات الأسئلة -->
<div class="modal fade" id="shuffleOptionsModal" tabindex="-1" aria-labelledby="shuffleOptionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="shuffleOptionsModalLabel">خلط خيارات الأسئلة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body">
                <p>اختر طريقة خلط خيارات الأسئلة:</p>
                <form asp-action="ShuffleOptions" method="get">
                    <input type="hidden" name="questionSetId" value="@Model.Id" />
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="radio" name="shuffleType" id="shuffleAll" value="all" checked>
                        <label class="form-check-label" for="shuffleAll">
                            خلط جميع الخيارات مع الحفاظ على مواضع الإجابات الصحيحة
                        </label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="radio" name="shuffleType" id="shuffleCorrect" value="correctAnswers">
                        <label class="form-check-label" for="shuffleCorrect">
                            خلط مواضع الإجابات الصحيحة فقط
                        </label>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="radio" name="shuffleType" id="shuffleComplete" value="complete">
                        <label class="form-check-label" for="shuffleComplete">
                            خلط كامل للخيارات والإجابات الصحيحة
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" id="submitShuffleForm">تطبيق</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal للتحذير عند إعادة التوليد -->
<div class="modal fade" id="regenerateWarningModal" tabindex="-1" aria-labelledby="regenerateWarningModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="regenerateWarningModalLabel">تنبيه قبل إعادة توليد الأسئلة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="bx bx-exclamation-triangle-fill me-2"></i>
                    <strong>تنبيه:</strong> إعادة توليد الأسئلة سيؤدي إلى حذف جميع الأسئلة الحالية وإنشاء أسئلة جديدة.
                    <br>
                    هل أنت متأكد من أنك تريد المتابعة؟
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <form asp-action="GenerateAgain" asp-route-id="@Model.Id" method="post">
                    <button type="submit" class="btn btn-danger">تأكيد إعادة التوليد</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal: ملخص الإجابات -->
<div class="modal fade" id="answersSummaryModal" tabindex="-1" aria-labelledby="answersSummaryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="answersSummaryModalLabel">ملخص الإجابات الصحيحة</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
            </div>
            <div class="modal-body" style="max-height: 500px; overflow-y: auto;">
                @if (Model.Status == QuestionSetStatus.Completed && Model.Questions != null && Model.Questions.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th style="width: 60px;">#</th>
                                    <th>السؤال</th>
                                    <th style="width: 200px;">الإجابة الصحيحة</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var question in Model.Questions.OrderBy(q => q.Index))
                                {
                                    <tr>
                                        <td><strong>@(question.Index + 1)</strong></td>
                                        <td class="text-wrap">@Html.Raw(question.QuestionText ?? question.InstructionText)</td>
                                        <td>
                                            @if (question.QuestionType == "MCQ" || question.QuestionType == "multiSelect")
                                            {
                                                @if (question.Options != null)
                                                {
                                                    @foreach (var option in question.Options.Where(o => o.IsCorrect))
                                                    {
                                                        <span class="badge bg-success me-1">@option.Text</span>
                                                    }
                                                }
                                            }
                                            else if (question.QuestionType == "TF")
                                            {
                                                <span class="badge @(question.TrueFalseAnswer == true ? "bg-success" : "bg-danger")">
                                                    @(question.TrueFalseAnswer == true ? "صحيح" : "خطأ")
                                                </span>
                                            }
                                            else if (question.QuestionType == "open" || question.QuestionType == "shortAnswer" || question.QuestionType == "fillInTheBlank")
                                            {
                                                <span class="text-info">@Html.Raw(question.Answer)</span>
                                            }
                                            else if (question.QuestionType == "ordering")
                                            {
                                                @if (question.OrderingItems != null)
                                                {
                                                    <small>
                                                        @foreach (var item in question.OrderingItems.Where(ss => ss.DisplayOrder == 0).OrderBy(i => i.CorrectOrder))
                                                        {
                                                            <div>@item.CorrectOrder. @item.Text</div>
                                                        }
                                                    </small>
                                                }
                                            }
                                            else if (question.QuestionType == "matching")
                                            {
                                                @if (question.MatchingPairs != null)
                                                {
                                                    <small>
                                                        @foreach (var pair in question.MatchingPairs)
                                                        {
                                                            <div>@pair.LeftSide ← @pair.RightSide</div>
                                                        }
                                                    </small>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        لا توجد أسئلة متاحة لعرض ملخصها.
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn btn-primary" onclick="printAnswersSummary()">
                    <i class="bx bx-printer"></i> طباعة
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        /* تأكيد عرض/إخفاء الأكورديون */
        .accordion-collapse.show {
            display: block !important;
        }

        .accordion-collapse:not(.show) {
            display: none !important;
        }

        /* تحسين مظهر الأزرار */
        .btn-group .btn {
            margin-left: 0.25rem;
        }

        /* ضمان أن المحتوى مرئي عند الفتح */
        .accordion-body {
            padding: 1rem;
        }
    </style>

    <script>
        $(document).ready(function() {
            // تشخيص العناصر عند تحميل الصفحة
            console.log('تم تحميل الصفحة');
            console.log('عدد أزرار الأكورديون:', $('#questionsAccordion .accordion-button').length);
            console.log('عدد عناصر الأكورديون:', $('#questionsAccordion .accordion-collapse').length);
            console.log('jQuery version:', $.fn.jquery);

            // اختبار وجود الأزرار
            console.log('زر عرض جميع الإجابات موجود:', $('#showAllAnswers').length > 0);
            console.log('زر إخفاء جميع الإجابات موجود:', $('#hideAllAnswers').length > 0);

            // طريقة بديلة للأزرار
            $(document).on('click', '#showAllAnswers', function(e) {
                e.preventDefault();
                console.log('تم النقر على عرض جميع الإجابات');

                // عرض جميع الأكورديون
                $('#questionsAccordion .accordion-button.collapsed').each(function() {
                    $(this)[0].click();
                });

                $(this).hide();
                $('#hideAllAnswers').show();
            });

            $(document).on('click', '#hideAllAnswers', function(e) {
                e.preventDefault();
                console.log('تم النقر على إخفاء جميع الإجابات');

                // إخفاء جميع الأكورديون
                $('#questionsAccordion .accordion-button:not(.collapsed)').each(function() {
                    $(this)[0].click();
                });

                $(this).hide();
                $('#showAllAnswers').show();
            });

            // تبديل عرض محتوى النص
            $('.text-content-toggle').click(function() {
                var preview = $(this).closest('.text-content-preview');
                var full = preview.siblings('.text-content-full');

                preview.toggle();
                full.toggle();
            });

            // تحديث حالة مجموعة الأسئلة بشكل دوري
            @if (Model.Status == QuestionSetStatus.Processing)
            {
                <text>
                var statusCheckInterval = setInterval(function() {
                    $.ajax({
                        url: '@Url.Action("Status", new { id = Model.Id })',
                        type: 'GET',
                        success: function(result) {
                            if (result.status !== '@QuestionSetStatus.Processing') {
                                clearInterval(statusCheckInterval);
                                location.reload();
                            }
                        }
                    });
                }, 5000); // فحص كل 5 ثوانٍ
                </text>
            }

            // إرسال نموذج خلط الخيارات
            $('#submitShuffleForm').click(function() {
                var selectedValue = $('input[name="shuffleType"]:checked').val();
                window.location.href = '@Url.Action("ShuffleOptions", new { id = Model.Id })' + '?shuffleType=' + selectedValue;
            });

            // وظيفة طباعة ملخص الإجابات
            window.printAnswersSummary = function() {
                var printContent = document.getElementById('answersSummaryModal').querySelector('.modal-body').innerHTML;
                var originalContent = document.body.innerHTML;

                var printHtml = '<html dir="rtl">' +
                    '<head>' +
                    '<title>ملخص الإجابات - @Model.Name</title>' +
                    '<style>' +
                    'body { font-family: Arial, sans-serif; margin: 20px; direction: rtl; }' +
                    'table { width: 100%; border-collapse: collapse; margin-top: 20px; }' +
                    'th, td { border: 1px solid #ddd; padding: 8px; text-align: right; }' +
                    'th { background-color: #f2f2f2; font-weight: bold; }' +
                    '.badge { background: #28a745; color: white; padding: 2px 6px; border-radius: 3px; }' +
                    'h1 { text-align: center; color: #333; }' +
                    '</style>' +
                    '</head>' +
                    '<body>' +
                    '<h1>ملخص الإجابات الصحيحة</h1>' +
                    '<h2>مجموعة الأسئلة: @Model.Name</h2>' +
                    '<p>تاريخ الطباعة: ' + new Date().toLocaleDateString('ar-SA') + '</p>' +
                    printContent +
                    '</body>' +
                    '</html>';

                document.body.innerHTML = printHtml;
                window.print();
                document.body.innerHTML = originalContent;
                window.location.reload();
            };
        });
    </script>
}
